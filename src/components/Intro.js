import foto from "../images/Foto.png";

import { useTranslation } from "react-i18next";

export const LinkedIn = ({ fillColor }) => (
  <svg
    role="img"
    height="48px"
    width="48px"
    aria-hidden="true"
    viewBox="0 0 16 16"
    fill="none"
  >
    <path
      fill="#0A66C2"
      d="M12.225 12.225h-1.778V9.44c0-.664-.012-1.519-.925-1.519-.926 0-1.068.724-1.068 1.47v2.834H6.676V6.498h1.707v.783h.024c.348-.594.996-.95 1.684-.925 1.802 0 2.135 1.185 2.135 2.728l-.001 3.14zM4.67 5.715a1.037 1.037 0 01-1.032-1.031c0-.566.466-1.032 1.032-1.032.566 0 1.031.466 1.032 1.032 0 .566-.466 1.032-1.032 1.032zm.889 6.51h-1.78V6.498h1.78v5.727zM13.11 2H2.885A.88.88 0 002 2.866v10.268a.88.88 0 00.885.866h10.226a.882.882 0 00.889-.866V2.865a.88.88 0 00-.889-.864z"
    />
  </svg>
);

export const GitHub = ({ fillColor }) => (
  <svg
    role="img"
    height="48px"
    width="48px"
    aria-hidden="true"
    viewBox="0 0 16 16"
    fill="none"
  >
    <path
      fill={fillColor}
      fillRule="evenodd"
      d="M8 1C4.133 1 1 4.13 1 7.993c0 3.09 2.006 5.71 4.787 6.635.35.064.478-.152.478-.337 0-.166-.006-.606-.01-1.19-1.947.423-2.357-.937-2.357-.937-.319-.808-.778-1.023-.778-1.023-.635-.434.048-.425.048-.425.703.05 1.073.72 1.073.72.624 1.07 1.638.76 2.037.582.063-.452.244-.76.444-.935-1.554-.176-3.188-.776-3.188-3.456 0-.763.273-1.388.72-1.876-.072-.177-.312-.888.07-1.85 0 0 .586-.189 1.924.716A6.711 6.711 0 018 4.381c.595.003 1.194.08 1.753.236 1.336-.905 1.923-.717 1.923-.717.382.963.142 1.674.07 1.85.448.49.72 1.114.72 1.877 0 2.686-1.638 3.278-3.197 3.45.251.216.475.643.475 1.296 0 .934-.009 1.688-.009 1.918 0 .187.127.404.482.336A6.996 6.996 0 0015 7.993 6.997 6.997 0 008 1z"
      clipRule="evenodd"
    />
  </svg>
);

export const X = ({ fillColor }) => (
  <svg
    role="img"
    height="48px"
    width="48px"
    aria-hidden="true"
    viewBox="0 0 512 462.799"
    fill="none"
  >
    <path
      fill={fillColor}
      d="M403.229 0h78.506L310.219 196.04 512 462.799H354.002L230.261 301.007 88.669 462.799h-78.56l183.455-209.683L0 0h161.999l111.856 147.88L403.229 0zm-27.556 415.805h43.505L138.363 44.527h-46.68l283.99 371.278z"
    />
  </svg>
);

export const Instagram = ({ fillColor }) => (
  <svg
    role="img"
    height="48px"
    width="48px"
    aria-hidden="true"
    viewBox="0 0 2500 2500"
    fill="none"
  >
    <defs>
      <radialGradient
        id="0"
        cx="332.14"
        cy="2511.81"
        r="3263.54"
        gradientUnits="userSpaceOnUse"
      >
        <stop offset=".09" stopColor="#fa8f21" />
        <stop offset=".78" stopColor="#d82d7e" />
      </radialGradient>
      <radialGradient
        id="1"
        cx="1516.14"
        cy="2623.81"
        r="2572.12"
        gradientUnits="userSpaceOnUse"
      >
        <stop offset=".64" stopColor="#8c3aaa" stopOpacity="0" />
        <stop offset="1" stopColor="#8c3aaa" />
      </radialGradient>
    </defs>
    <path
      d="M833.4,1250c0-230.11,186.49-416.7,416.6-416.7s416.7,186.59,416.7,416.7-186.59,416.7-416.7,416.7S833.4,1480.11,833.4,1250m-225.26,0c0,354.5,287.36,641.86,641.86,641.86S1891.86,1604.5,1891.86,1250,1604.5,608.14,1250,608.14,608.14,895.5,608.14,1250M1767.27,582.69a150,150,0,1,0,150.06-149.94h-0.06a150.07,150.07,0,0,0-150,149.94M745,2267.47c-121.87-5.55-188.11-25.85-232.13-43-58.36-22.72-100-49.78-143.78-93.5s-70.88-85.32-93.5-143.68c-17.16-44-37.46-110.26-43-232.13-6.06-131.76-7.27-171.34-7.27-505.15s1.31-373.28,7.27-505.15c5.55-121.87,26-188,43-232.13,22.72-58.36,49.78-100,93.5-143.78s85.32-70.88,143.78-93.5c44-17.16,110.26-37.46,232.13-43,131.76-6.06,171.34-7.27,505-7.27s373.28,1.31,505.15,7.27c121.87,5.55,188,26,232.13,43,58.36,22.62,100,49.78,143.78,93.5s70.78,85.42,93.5,143.78c17.16,44,37.46,110.26,43,232.13,6.06,131.87,7.27,171.34,7.27,505.15s-1.21,373.28-7.27,505.15c-5.55,121.87-25.95,188.11-43,232.13-22.72,58.36-49.78,100-93.5,143.68s-85.42,70.78-143.78,93.5c-44,17.16-110.26,37.46-232.13,43-131.76,6.06-171.34,7.27-505.15,7.27s-373.28-1.21-505-7.27M734.65,7.57c-133.07,6.06-224,27.16-303.41,58.06C349,97.54,279.38,140.35,209.81,209.81S97.54,349,65.63,431.24c-30.9,79.46-52,170.34-58.06,303.41C1.41,867.93,0,910.54,0,1250s1.41,382.07,7.57,515.35c6.06,133.08,27.16,223.95,58.06,303.41,31.91,82.19,74.62,152,144.18,221.43S349,2402.37,431.24,2434.37c79.56,30.9,170.34,52,303.41,58.06C868,2498.49,910.54,2500,1250,2500s382.07-1.41,515.35-7.57c133.08-6.06,223.95-27.16,303.41-58.06,82.19-32,151.86-74.72,221.43-144.18s112.18-139.24,144.18-221.43c30.9-79.46,52.1-170.34,58.06-303.41,6.06-133.38,7.47-175.89,7.47-515.35s-1.41-382.07-7.47-515.35c-6.06-133.08-27.16-224-58.06-303.41-32-82.19-74.72-151.86-144.18-221.43S2150.95,97.54,2068.86,65.63c-79.56-30.9-170.44-52.1-303.41-58.06C1632.17,1.51,1589.56,0,1250.1,0S868,1.41,734.65,7.57"
      fill="url(#0)"
    />
    <path
      d="M833.4,1250c0-230.11,186.49-416.7,416.6-416.7s416.7,186.59,416.7,416.7-186.59,416.7-416.7,416.7S833.4,1480.11,833.4,1250m-225.26,0c0,354.5,287.36,641.86,641.86,641.86S1891.86,1604.5,1891.86,1250,1604.5,608.14,1250,608.14,608.14,895.5,608.14,1250M1767.27,582.69a150,150,0,1,0,150.06-149.94h-0.06a150.07,150.07,0,0,0-150,149.94M745,2267.47c-121.87-5.55-188.11-25.85-232.13-43-58.36-22.72-100-49.78-143.78-93.5s-70.88-85.32-93.5-143.68c-17.16-44-37.46-110.26-43-232.13-6.06-131.76-7.27-171.34-7.27-505.15s1.31-373.28,7.27-505.15c5.55-121.87,26-188,43-232.13,22.72-58.36,49.78-100,93.5-143.78s85.32-70.88,143.78-93.5c44-17.16,110.26-37.46,232.13-43,131.76-6.06,171.34-7.27,505-7.27s373.28,1.31,505.15,7.27c121.87,5.55,188,26,232.13,43,58.36,22.62,100,49.78,143.78,93.5s70.78,85.42,93.5,143.78c17.16,44,37.46,110.26,43,232.13,6.06,131.87,7.27,171.34,7.27,505.15s-1.21,373.28-7.27,505.15c-5.55,121.87-25.95,188.11-43,232.13-22.72,58.36-49.78,100-93.5,143.68s-85.42,70.78-143.78,93.5c-44,17.16-110.26,37.46-232.13,43-131.76,6.06-171.34,7.27-505.15,7.27s-373.28-1.21-505-7.27M734.65,7.57c-133.07,6.06-224,27.16-303.41,58.06C349,97.54,279.38,140.35,209.81,209.81S97.54,349,65.63,431.24c-30.9,79.46-52,170.34-58.06,303.41C1.41,867.93,0,910.54,0,1250s1.41,382.07,7.57,515.35c6.06,133.08,27.16,223.95,58.06,303.41,31.91,82.19,74.62,152,144.18,221.43S349,2402.37,431.24,2434.37c79.56,30.9,170.34,52,303.41,58.06C868,2498.49,910.54,2500,1250,2500s382.07-1.41,515.35-7.57c133.08-6.06,223.95-27.16,303.41-58.06,82.19-32,151.86-74.72,221.43-144.18s112.18-139.24,144.18-221.43c30.9-79.46,52.1-170.34,58.06-303.41,6.06-133.38,7.47-175.89,7.47-515.35s-1.41-382.07-7.47-515.35c-6.06-133.08-27.16-224-58.06-303.41-32-82.19-74.72-151.86-144.18-221.43S2150.95,97.54,2068.86,65.63c-79.56-30.9-170.44-52.1-303.41-58.06C1632.17,1.51,1589.56,0,1250.1,0S868,1.41,734.65,7.57"
      fill="url(#1)"
    />
  </svg>
);

export const ScrollDown = ({ fillColor }) => (
  <svg
    role="img"
    height="48px"
    width="48px"
    aria-hidden="true"
    viewBox="0 0 24 24"
    fill={fillColor}
    className="scroll-down--icon"
  >
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M4.29289 8.29289C4.68342 7.90237 5.31658 7.90237 5.70711 8.29289L12 14.5858L18.2929 8.29289C18.6834 7.90237 19.3166 7.90237 19.7071 8.29289C20.0976 8.68342 20.0976 9.31658 19.7071 9.70711L12.7071 16.7071C12.3166 17.0976 11.6834 17.0976 11.2929 16.7071L4.29289 9.70711C3.90237 9.31658 3.90237 8.68342 4.29289 8.29289Z"
      fill={fillColor}
    ></path>
  </svg>
);

function Intro(props) {
  const { t } = useTranslation();
  const objetoRedes = [
    {
      nombre: "LinkedIn",
      enlace: "https://www.linkedin.com/in/crcascr/",
    },
    {
      nombre: "GitHub",
      enlace: "https://github.com/crcascr/",
    },
    {
      nombre: "X",
      enlace: "https://twitter.com/crcascr",
    },
    {
      nombre: "Instagram",
      enlace: "https://www.instagram.com/cristiancastill0/",
    },
  ];

  const elementosRedes = objetoRedes.map((red, index) => {
    return (
      <div
        className={`intro--red ${
          props.modoOscuro
            ? `${red.nombre.toLowerCase()}Oscuro`
            : `${red.nombre.toLowerCase()}`
        } `}
        key={index}
        onClick={() => window.open(red.enlace, "_blank", "noopener,noreferrer")}
      >
        <div className="intro--red-icono-container">
          {red.nombre === "LinkedIn" ? (
            <LinkedIn fillColor={props.modoOscuro ? "white" : "#0e141b"} />
          ) : red.nombre === "GitHub" ? (
            <GitHub fillColor={props.modoOscuro ? "white" : "#0e141b"} />
          ) : red.nombre === "X" ? (
            <X fillColor={props.modoOscuro ? "white" : "#0e141b"} />
          ) : red.nombre === "Instagram" ? (
            <Instagram fillColor={props.modoOscuro ? "white" : "#0e141b"} />
          ) : null}
        </div>
      </div>
    );
  });

  return (
    <div className="intro">
      <div className="intro--containerFoto">
        <div className="intro--imagen">
          <div className="intro--blob">
            <svg
              viewBox="0 0 200 200"
              height="180px"
              width="180px"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill="#43C494"
                d="M47.5,-38.7C62.7,-18.9,76.8,0.9,74.1,18.6C71.4,36.2,51.9,51.7,30.4,61.5C8.8,71.3,-14.7,75.4,-31.8,66.9C-49,58.3,-59.7,37.2,-65,14.6C-70.4,-8,-70.4,-32.1,-58.7,-51.1C-46.9,-70.1,-23.5,-83.9,-3.6,-81C16.2,-78.1,32.4,-58.4,47.5,-38.7Z"
                transform="translate(100 100)"
              />
            </svg>
          </div>
          <img src={foto} alt="Foto" className="intro--foto" />
        </div>
        <div className="intro--redes">{elementosRedes}</div>
      </div>

      <h1
        className={`intro--titulo ${
          props.modoOscuro ? "texto--modoOscuro" : ""
        }`}
      >
        {t("intro.Inicio")}{" "}
        <span className="texto--color">Cristian Castillo Cruz</span>{" "}
        {t("intro.Complemento")}
      </h1>
      <a className="scroll-down" href="#biografia">
        <ScrollDown fillColor={props.modoOscuro ? "white" : "#0e141b"} />
      </a>
    </div>
  );
}

export default Intro;
